package sqlobjects

/* Créer un objet GO pour les perso suivant ce schéma de table SQL avec les gorms tags correspondants et nom de colonnes en majuscule
CREATE TABLE Perso (
	ID  INT GENERATED BY DEFAULT IDENTITY PRIMARY KEYPRIMARY KEY,
	NAME VARCHAR(255) NOT NULL,
	TOTAL_HP INT NOT NULL,
	PICTURE BLON,
	USER_ID INT NOT NULL,
	FOREIGN KEY (USER_ID) REFERENCES User(ID)
);
*/
import (
	"GameCaster/main/db"
	"fmt"
)

type Perso struct {
	ID      int    `gorm:"primaryKey;column:ID"`
	Name    string `gorm:"type:VARCHAR2(255);column:NAME" validate:"required"`
	TotalHP int    `gorm:"type:NUMBER(3);default:1;column:TOTAL_HP" validate:"required"`
	//Picture  []byte
	UserID int `gorm:"type:INT;column:USER_ID" validate:"required"`

	// foreign keys
	User *User `gorm:"foreignKey:UserID;references:ID"`
}

func (Perso) TableName() string {
	return "Perso"
}

func (p Perso) Test() (string, error) {
	db, err := db.GetInstance()
	if err != nil {
		return "", err
	}

	results := db.Connection.First(&p, 1)
	if results.Error != nil {
		return "", results.Error
	}

	res := fmt.Sprintf("perso TEST: \n ID: %d\nName: %s\n", p.ID, p.Name)

	return res, nil
}
